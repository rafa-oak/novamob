<?xml version="1.0"?>

<robot name="scout_v2" 
    xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:arg name="robot_namespace" default="/" /> 

    <xacro:include filename="$(find scout_nav2_gz)/urdf/scout_v2/scout_wheel_type1.xacro" />
    <xacro:include filename="$(find scout_nav2_gz)/urdf/scout_v2/scout_wheel_type2.xacro" />

    <!-- Variables -->
    <xacro:property name="M_PI" value="3.14159"/>

    <!-- Vehicle Geometries -->
    <xacro:property name="base_x_size" value="0.9250000" />
    <xacro:property name="base_y_size" value="0.380000" />
    <xacro:property name="base_z_size" value="0.210000" />

    <xacro:property name="wheelbase" value="0.498" />
    <xacro:property name="track" value="0.58306" />
    <xacro:property name="wheel_vertical_offset" value="-0.0702" />

    <xacro:property name="wheel_length" value="1.1653e-01" />
    <xacro:property name="wheel_radius" value="1.6459e-01" />


    <!-- Define inertial property macros  -->
    <xacro:macro name="box_inertia" params="m w h d">
        <inertial>
        <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
        <mass value="${m}"/>
        <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
        </inertial>
    </xacro:macro>

    <xacro:macro name="cylinder_inertia" params="m r h">
        <inertial>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <mass value="${m}"/>
        <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
        </inertial>
    </xacro:macro>

    <xacro:macro name="sphere_inertia" params="m r">
        <inertial>
        <mass value="${m}"/>
        <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
        </inertial>
    </xacro:macro>

    <xacro:macro name="wheel_inertia" params="mass radius">
        <inertial>
        <mass value="${mass}"/>
        <inertia ixx="${(2/5) * mass * (radius * radius)}" ixy="0" ixz="0"
                    iyy="${(2/5) * mass * (radius * radius)}" iyz="0"
                    izz="${(2/5) * mass * (radius * radius)}" />
        </inertial>
    </xacro:macro>

    <!-- Base link -->
    <link name="base_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <mesh filename="file://$(find scout_nav2_gz)/meshes/scout_v2/base_link.dae" />
            </geometry>
        </visual>
        <collision>
            <origin xyz="0 0 0.008" rpy="0 0 0" />
            <geometry>
                <box size="${base_x_size} ${base_y_size} ${base_z_size}"/>
            </geometry>
        </collision>
        <collision>
            <origin xyz="0 0 ${base_z_size/6}" rpy="0 0 0" />
            <geometry>
                <box size="${base_x_size/6} ${base_y_size*1.65} ${base_z_size/3}"/>
            </geometry>
        </collision>
    </link>

    <link name="base_footprint"/>

    <joint name="base_footprint_joint" type="fixed">
        <origin xyz="0 0 ${wheel_vertical_offset - wheel_radius}" rpy="0 0 0" />
        <parent link="base_link" />
        <child link="base_footprint" />
    </joint>

    <link name="inertial_link">
        <inertial>
            <mass value="40" />
            <origin xyz="0.0 0.0 0.0" />
            <inertia ixx="2.288641" ixy="0" ixz="0" iyy="5.103976" iyz="0" izz="3.431465" />
        </inertial>
    </link>

    <joint name="inertial_joint" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0" />
        <parent link="base_link" />
        <child link="inertial_link" />
    </joint>

    <!-- Scout wheel macros -->
    <!-- wheel labeled from 0 to 3, conter-clockwise, starting from front right wheel -->
    <!-- motor 1 and 2 (left side) are mechanically installed in a reversed direction -->
    <xacro:scout_wheel_type1 wheel_prefix="front_right">
        <origin xyz="${wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="3.14 0 0" />
    </xacro:scout_wheel_type1>
    <xacro:scout_wheel_type2 wheel_prefix="front_left">
        <origin xyz="${wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="3.14 0 0" />
    </xacro:scout_wheel_type2>
    <xacro:scout_wheel_type1 wheel_prefix="rear_left">
        <origin xyz="${-wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="3.14 0 0" />
    </xacro:scout_wheel_type1>
    <xacro:scout_wheel_type2 wheel_prefix="rear_right">
        <origin xyz="${-wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="3.14 0 0" />
    </xacro:scout_wheel_type2>



  <!-- Camera stand box -->
  <link name="camera_stand_link">
      <visual>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
              <box size="0.15 0.15 0.01"/> <!-- Adjust size as needed -->
          </geometry>
          <material name="Gray">
              <color rgba="0.5 0.5 0.5 1.0"/>
          </material>
      </visual>
      <collision>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
              <box size="0.15 0.15 0.01"/> <!-- Same size for collision -->
          </geometry>
      </collision>

      <xacro:box_inertia m="0.1" w="0.1" d="0.1" h="0.1"/>

  </link>

  <joint name="camera_stand_joint" type="fixed">
      <parent link="base_link"/>
      <child link="camera_stand_link"/>
      <origin xyz="0.24 0 ${(base_z_size/2) + 0.0127}" rpy="0 0 0"/> 
  </joint>


  <!-- Lidar stand box -->
  <link name="lidar_stand_link">
      <visual>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
              <box size="0.1 0.15 0.04"/> <!-- Adjust size as needed -->
          </geometry>
          <material name="Gray">
              <color rgba="0.5 0.5 0.5 1.0"/>
          </material>
      </visual>
      <collision>
          <origin xyz="0 0 0" rpy="0 0 0"/>
          <geometry>
              <box size="0.1 0.15 0.04"/> <!-- Same size for collision -->
          </geometry>
      </collision>

      <xacro:box_inertia m="0.1" w="0.1" d="0.1" h="0.1"/>

  </link>

  <joint name="lidar_stand_joint" type="fixed">
      <parent link="camera_stand_link"/>
      <child link="lidar_stand_link"/>
      <origin xyz="-0.01 0 0.025" rpy="0 0 0"/> 
  </joint>



    <!-- IMU -->

  <link name="imu_link">
    <visual>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </visual>

    <collision>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>

    <xacro:box_inertia m="0.1" w="0.1" d="0.1" h="0.1"/>
  </link>

  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="0.0 0 0.0"/>
  </joint>

  <gazebo reference="imu_link">
    <sensor name="imu_sensor" type="imu">
      <gz_frame_id>imu_link</gz_frame_id>
      <plugin filename="ignition-gazebo-imu-system" name="ignition::gazebo::systems::Imu">
      </plugin>

      <topic>imu</topic>
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
    </sensor>
  </gazebo>

  <ros2_control name="IgnitionSystem" type="system">
    <hardware>
      <plugin>ign_ros2_control/IgnitionSystem</plugin>
    </hardware>
    <joint name="front_left_wheel">
      <command_interface name="velocity">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="front_right_wheel">
      <command_interface name="velocity">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="rear_left_wheel">
      <command_interface name="velocity">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="rear_right_wheel">
      <command_interface name="velocity">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
  </ros2_control>


  <gazebo>
    <plugin filename="ign_ros2_control-system" name="ign_ros2_control::IgnitionROS2ControlPlugin">
      <parameters>$(find scout_nav2_gz)/config/diff_drive_controller_velocity.yaml</parameters>
    </plugin>
  </gazebo>


  <!-- LIDAR -->

  <link name="lidar_link">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.125"/>
      <inertia ixx="0.001"  ixy="0"  ixz="0" iyy="0.001" iyz="0" izz="0.001" />
    </inertial>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.06" length="0.086"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.06" length="0.086"/>
      </geometry>
    </visual>
  </link>

  <joint name="lidar_joint" type="fixed">
        <parent link="base_link"/>
        <child link="lidar_link"/>
        <origin xyz="0.25 0 ${(base_z_size/2) + 0.0127 + 0.025 + 0.02 + (0.086/2)}" rpy="0 0 0"/>
  </joint>

  <!-- Based on the VLP 16 Lidar -->
  <gazebo reference="lidar_link">
    <sensor name="lidar" type="gpu_lidar">
      <gz_frame_id>lidar_link</gz_frame_id>
      <topic>scan</topic>
      <always_on>true</always_on>
      <visualize>true</visualize>
      <update_rate>20</update_rate>
      <lidar>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1.000000</resolution>
            <min_angle>0.000000</min_angle>
            <max_angle>6.280000</max_angle>
          </horizontal>
          <vertical>
            <samples>16</samples> <!-- VLP-16 specific -->
            <min_angle>-0.261799</min_angle> <!-- -15° in radians -->
            <max_angle>0.261799</max_angle> <!-- 15° in radians -->
          </vertical>
        </scan>
        <range>
          <min>0.150000</min>
          <max>100</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </lidar>
    </sensor>
  </gazebo>


  <link name="camera_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.030 0.124 0.030"/>
      </geometry>
    </visual>


    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.030 0.124 0.030"/>
      </geometry>
    </collision>

    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.135"/>
      <inertia ixx="${(1/12) * 0.135 * ((0.124  * 0.124)  + (0.030 * 0.030))}" ixy="0.0" ixz="0.0"
                iyy="${(1/12) * 0.135 * ((0.030 * 0.030) + (0.030 * 0.030))}" iyz="0.0"
                izz="${(1/12) * 0.135 * ((0.030 * 0.030) + (0.124  * 0.124))}"/>
    </inertial>
  </link>


  <joint name="camera_joint" type="fixed">
    <parent link="camera_stand_link"/>
    <child link="camera_link"/>
    <origin xyz="0.06 0 0.02" rpy="0 0 0"/>
  </joint>

  <link name="camera_frame"/>

  <joint name="camera_frame_joint" type="fixed">
    <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
    <parent link="camera_link"/>
    <child link="camera_frame"/>
  </joint>

  <gazebo reference="camera_link">
    <sensor name="depth_camera1" type="depth_camera">
      <update_rate>30</update_rate>
      <topic>depth_camera</topic>
      <visualize>true</visualize>
      <alwaysOn>true</alwaysOn>
      <camera>
        <horizontal_fov>1.518</horizontal_fov>  <!-- Horizontal FOV 87° -->
        <vertical_fov>1.01</vertical_fov> <!-- Vertical FOV 58° -->
        <image>
          <width>640</width>
          <height>480</height>
          <format>R_FLOAT32</format>
        </image>
        <clip>
          <near>0.2</near>
          <far>10</far>
        </clip>
      </camera>
    </sensor>
  </gazebo>



<!-- GPS Link -->
<link name="gps_link">
  <visual>
    <geometry>
      <box size="0.01 0.01 0.01"/>
    </geometry>
  </visual>

  <collision>
    <geometry>
      <box size="0.01 0.01 0.01"/>
    </geometry>
  </collision>

  <xacro:box_inertia m="0.1" w="0.1" d="0.1" h="0.1"/>
</link>

<!-- Joint for GPS -->
<joint name="gps_joint" type="fixed">
  <parent link="base_link"/>
  <child link="gps_link"/>
  <origin xyz="0.0 0 0.1"/> <!-- Adjust position as needed -->
</joint>

<gazebo reference="gps_link">
  <sensor name="gps_sensor" type="navsat">
    <plugin filename="ignition-gazebo-navsat-system" name="ignition::gazebo::systems::NavSat">
    </plugin>

    <topic>navsat</topic>
    <always_on>true</always_on>
    <update_rate>1</update_rate>
  </sensor>
</gazebo>

</robot>

